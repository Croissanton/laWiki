basePath: /api/comments
definitions:
  model.Comment:
    properties:
      author:
        type: string
      content:
        type: string
      created_at:
        type: string
      id:
        type: string
      rating:
        type: integer
      version_id:
        type: string
    type: object
host: localhost:8003
info:
  contact: {}
  description: API documentation for the Comment Service.
  title: Comment Service API
  version: "1.0"
paths:
  /api/comments/:
    get:
      description: Retrieves a list of all comments.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Comment'
            type: array
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Get all comments
      tags:
      - Comments
    post:
      consumes:
      - application/json
      description: Creates a new comment. Expects a JSON object in the request body.
      parameters:
      - description: Comment to create
        in: body
        name: comment
        required: true
        schema:
          $ref: '#/definitions/model.Comment'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Comment'
        "400":
          description: Invalid request body
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Create a new comment
      tags:
      - Comments
  /api/comments/author:
    get:
      description: Retrieves comments created by a specific author.
      parameters:
      - description: Author nickname
        in: query
        name: author
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Comment'
            type: array
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Get comments by author
      tags:
      - Comments
  /api/comments/content:
    get:
      description: Retrieves a comment by its content.
      parameters:
      - description: Content to search
        in: query
        name: content
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Comment'
        "404":
          description: Comment not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Get comment by content
      tags:
      - Comments
  /api/comments/date:
    get:
      description: Retrieves comments created on a specific date.
      parameters:
      - description: Creation date (YYYY-MM-DD)
        in: query
        name: createdAt
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Comment'
            type: array
        "400":
          description: Invalid date format. Expected YYYY-MM-DD
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Get comments by date
      tags:
      - Comments
  /api/comments/health:
    get:
      description: Checks if the service is up
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Health Check
      tags:
      - Health
  /api/comments/id/:
    delete:
      description: Deletes a comment by its ID.
      parameters:
      - description: Comment ID
        in: query
        name: id
        required: true
        type: string
      responses:
        "204":
          description: No Content
          schema:
            type: string
        "400":
          description: Invalid ID
          schema:
            type: string
        "404":
          description: Comment not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Delete comment by ID
      tags:
      - Comments
    get:
      description: Retrieves a comment by its ID.
      parameters:
      - description: Comment ID
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Comment'
        "400":
          description: Invalid ID
          schema:
            type: string
        "404":
          description: Comment not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Get comment by ID
      tags:
      - Comments
    put:
      consumes:
      - application/json
      description: Updates a comment by its ID. Expects a JSON object in the request
        body.
      parameters:
      - description: Comment ID
        in: query
        name: id
        required: true
        type: string
      - description: Updated comment
        in: body
        name: comment
        required: true
        schema:
          $ref: '#/definitions/model.Comment'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Comment'
        "400":
          description: Invalid ID or request body
          schema:
            type: string
        "404":
          description: Comment not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Update comment by ID
      tags:
      - Comments
  /api/comments/rating:
    get:
      description: Retrieves comments with a specific rating.
      parameters:
      - description: Rating to filter
        in: query
        name: rating
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Comment'
            type: array
        "400":
          description: Invalid rating format
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Get comments by rating
      tags:
      - Comments
  /api/comments/version:
    delete:
      description: Deletes all comments associated with a specific version.
      parameters:
      - description: Version ID
        in: query
        name: versionID
        required: true
        type: string
      responses:
        "204":
          description: No Content
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Delete comments by version ID
      tags:
      - Comments
    get:
      description: Retrieves comments associated with a specific version.
      parameters:
      - description: Version ID
        in: query
        name: versionID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Comment'
            type: array
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Get comments by the id of a version its associated to
      tags:
      - Comments
swagger: "2.0"
